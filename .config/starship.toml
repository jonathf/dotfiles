add_newline=false
format = """\
$username\
$hostname\
$directory\
$hg_branch\
$git_branch\
$git_commit\
$git_status\
$git_state\
$python\
$conda\
$docker\
$golang\
$julia\
$rust\
$package\
$cmd_duration\
$jobs\
$character\
"""

[username]
format="[$user ]($style)"
style_root="cyan"
style_user="green"

[hostname]
format="[$hostname ](bright-blue)"
ssh_only=true
trim_at="."

[directory]
format="[$lock_symbol](red)[$path ](bright-yellow)"
read_only_symbol="!"
truncation_length=4
truncate_to_repo=false
fish_style_pwd_dir_length=3

[hg_branch]
format="[ ](bright-white)[$branch ](bold bright-white)"

[git_branch]
format="[ ](bright-white)[$branch ](bold bright-black)"

[git_commit]
format="[$hash ](bright-black)"
commit_hash_length=7
only_detached=true

[git_state]
format="[$state $progress_current/$progress_total ](bold green)"
rebase="REBASE"
merge="MERGE"
revert="REVERT"
cherry_pick="CHERRY-PICK"
bisect="BISECT"

[git_status]
format="([$all_status$ahead_behind](bright-black) )"
conflicted="[$count!](bright-red)"
diverged="[${ahead_count}+${behind_count}-](bright-cyan)"
ahead="[${count}+](bright-cyan)"
behind="[${count}-](bright-cyan)"
untracked="$count?"
stashed="[${count}S](bright-red)"
modified="${count}m"
staged="${count}s"
renamed="${count}r"
deleted="[${count}D](bright-red)"

[package]
format="[ $version ](bright-white)"

[python]
format="[ $version ](bright-white)"
scan_for_pyfiles=false

[conda]
format="[⭘ $environment ](bright-white)"

[docker]
format="[ $context ](bright-white)"
only_with_files=true

[golang]
format="[go](bold black)[$version ](bright-white)"

[julia]
format="[ஃ $version ](bright-white)"

[rust]
format="[ $version ](bright-white)"

[cmd_duration]
format="[$duration ](yellow)"
min_time=1000

[jobs]
format="[&$number ](bold yellow)"
threshold = 0

[character]
format="$symbol"
success_symbol="[\n\\$ ](bright-green)"
error_symbol="[\n\\$ ](bright-red)"
vicmd_symbol="[ VI-MODE \n\\$ ](bold fg:black bg:yellow)"
